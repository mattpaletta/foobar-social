//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: user_setting.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Foobar_UserSetting_UserSettingServiceget_passwordCall: ClientCallUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServiceget_passwordCallBase: ClientCallUnaryBase<Foobar_Auth_Auth, Foobar_Auth_Auth>, Foobar_UserSetting_UserSettingServiceget_passwordCall {
  override class var method: String { return "/foobar.user_setting.UserSettingService/get_password" }
}

internal protocol Foobar_UserSetting_UserSettingServiceget_infoCall: ClientCallUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServiceget_infoCallBase: ClientCallUnaryBase<Foobar_Auth_Auth, Foobar_UserSetting_UserInfo>, Foobar_UserSetting_UserSettingServiceget_infoCall {
  override class var method: String { return "/foobar.user_setting.UserSettingService/get_info" }
}

internal protocol Foobar_UserSetting_UserSettingServiceupdate_infoCall: ClientCallUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServiceupdate_infoCallBase: ClientCallUnaryBase<Foobar_UserSetting_UserInfo, Foobar_Shared_Empty>, Foobar_UserSetting_UserSettingServiceupdate_infoCall {
  override class var method: String { return "/foobar.user_setting.UserSettingService/update_info" }
}

internal protocol Foobar_UserSetting_UserSettingServicecreate_userCall: ClientCallUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServicecreate_userCallBase: ClientCallUnaryBase<Foobar_UserSetting_UserInfo, Foobar_UserSetting_UserInfo>, Foobar_UserSetting_UserSettingServicecreate_userCall {
  override class var method: String { return "/foobar.user_setting.UserSettingService/create_user" }
}


/// Instantiate Foobar_UserSetting_UserSettingServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Foobar_UserSetting_UserSettingServiceService: ServiceClient {
  /// Synchronous. Unary.
  func get_password(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata) throws -> Foobar_Auth_Auth
  /// Asynchronous. Unary.
  @discardableResult
  func get_password(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata, completion: @escaping (Foobar_Auth_Auth?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceget_passwordCall

  /// Synchronous. Unary.
  func get_info(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata) throws -> Foobar_UserSetting_UserInfo
  /// Asynchronous. Unary.
  @discardableResult
  func get_info(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata, completion: @escaping (Foobar_UserSetting_UserInfo?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceget_infoCall

  /// Synchronous. Unary.
  func update_info(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata) throws -> Foobar_Shared_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func update_info(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata, completion: @escaping (Foobar_Shared_Empty?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceupdate_infoCall

  /// Synchronous. Unary.
  func create_user(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata) throws -> Foobar_UserSetting_UserInfo
  /// Asynchronous. Unary.
  @discardableResult
  func create_user(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata, completion: @escaping (Foobar_UserSetting_UserInfo?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServicecreate_userCall

}

internal extension Foobar_UserSetting_UserSettingServiceService {
  /// Synchronous. Unary.
  func get_password(_ request: Foobar_Auth_Auth) throws -> Foobar_Auth_Auth {
    return try self.get_password(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func get_password(_ request: Foobar_Auth_Auth, completion: @escaping (Foobar_Auth_Auth?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceget_passwordCall {
    return try self.get_password(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func get_info(_ request: Foobar_Auth_Auth) throws -> Foobar_UserSetting_UserInfo {
    return try self.get_info(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func get_info(_ request: Foobar_Auth_Auth, completion: @escaping (Foobar_UserSetting_UserInfo?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceget_infoCall {
    return try self.get_info(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func update_info(_ request: Foobar_UserSetting_UserInfo) throws -> Foobar_Shared_Empty {
    return try self.update_info(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func update_info(_ request: Foobar_UserSetting_UserInfo, completion: @escaping (Foobar_Shared_Empty?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceupdate_infoCall {
    return try self.update_info(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func create_user(_ request: Foobar_UserSetting_UserInfo) throws -> Foobar_UserSetting_UserInfo {
    return try self.create_user(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func create_user(_ request: Foobar_UserSetting_UserInfo, completion: @escaping (Foobar_UserSetting_UserInfo?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServicecreate_userCall {
    return try self.create_user(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Foobar_UserSetting_UserSettingServiceServiceClient: ServiceClientBase, Foobar_UserSetting_UserSettingServiceService {
  /// Synchronous. Unary.
  internal func get_password(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata) throws -> Foobar_Auth_Auth {
    return try Foobar_UserSetting_UserSettingServiceget_passwordCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func get_password(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata, completion: @escaping (Foobar_Auth_Auth?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceget_passwordCall {
    return try Foobar_UserSetting_UserSettingServiceget_passwordCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func get_info(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata) throws -> Foobar_UserSetting_UserInfo {
    return try Foobar_UserSetting_UserSettingServiceget_infoCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func get_info(_ request: Foobar_Auth_Auth, metadata customMetadata: Metadata, completion: @escaping (Foobar_UserSetting_UserInfo?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceget_infoCall {
    return try Foobar_UserSetting_UserSettingServiceget_infoCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func update_info(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata) throws -> Foobar_Shared_Empty {
    return try Foobar_UserSetting_UserSettingServiceupdate_infoCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func update_info(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata, completion: @escaping (Foobar_Shared_Empty?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServiceupdate_infoCall {
    return try Foobar_UserSetting_UserSettingServiceupdate_infoCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func create_user(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata) throws -> Foobar_UserSetting_UserInfo {
    return try Foobar_UserSetting_UserSettingServicecreate_userCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func create_user(_ request: Foobar_UserSetting_UserInfo, metadata customMetadata: Metadata, completion: @escaping (Foobar_UserSetting_UserInfo?, CallResult) -> Void) throws -> Foobar_UserSetting_UserSettingServicecreate_userCall {
    return try Foobar_UserSetting_UserSettingServicecreate_userCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Foobar_UserSetting_UserSettingServiceProvider: ServiceProvider {
  func get_password(request: Foobar_Auth_Auth, session: Foobar_UserSetting_UserSettingServiceget_passwordSession) throws -> Foobar_Auth_Auth
  func get_info(request: Foobar_Auth_Auth, session: Foobar_UserSetting_UserSettingServiceget_infoSession) throws -> Foobar_UserSetting_UserInfo
  func update_info(request: Foobar_UserSetting_UserInfo, session: Foobar_UserSetting_UserSettingServiceupdate_infoSession) throws -> Foobar_Shared_Empty
  func create_user(request: Foobar_UserSetting_UserInfo, session: Foobar_UserSetting_UserSettingServicecreate_userSession) throws -> Foobar_UserSetting_UserInfo
}

extension Foobar_UserSetting_UserSettingServiceProvider {
  internal var serviceName: String { return "foobar.user_setting.UserSettingService" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/foobar.user_setting.UserSettingService/get_password":
      return try Foobar_UserSetting_UserSettingServiceget_passwordSessionBase(
        handler: handler,
        providerBlock: { try self.get_password(request: $0, session: $1 as! Foobar_UserSetting_UserSettingServiceget_passwordSessionBase) })
          .run()
    case "/foobar.user_setting.UserSettingService/get_info":
      return try Foobar_UserSetting_UserSettingServiceget_infoSessionBase(
        handler: handler,
        providerBlock: { try self.get_info(request: $0, session: $1 as! Foobar_UserSetting_UserSettingServiceget_infoSessionBase) })
          .run()
    case "/foobar.user_setting.UserSettingService/update_info":
      return try Foobar_UserSetting_UserSettingServiceupdate_infoSessionBase(
        handler: handler,
        providerBlock: { try self.update_info(request: $0, session: $1 as! Foobar_UserSetting_UserSettingServiceupdate_infoSessionBase) })
          .run()
    case "/foobar.user_setting.UserSettingService/create_user":
      return try Foobar_UserSetting_UserSettingServicecreate_userSessionBase(
        handler: handler,
        providerBlock: { try self.create_user(request: $0, session: $1 as! Foobar_UserSetting_UserSettingServicecreate_userSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Foobar_UserSetting_UserSettingServiceget_passwordSession: ServerSessionUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServiceget_passwordSessionBase: ServerSessionUnaryBase<Foobar_Auth_Auth, Foobar_Auth_Auth>, Foobar_UserSetting_UserSettingServiceget_passwordSession {}

internal protocol Foobar_UserSetting_UserSettingServiceget_infoSession: ServerSessionUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServiceget_infoSessionBase: ServerSessionUnaryBase<Foobar_Auth_Auth, Foobar_UserSetting_UserInfo>, Foobar_UserSetting_UserSettingServiceget_infoSession {}

internal protocol Foobar_UserSetting_UserSettingServiceupdate_infoSession: ServerSessionUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServiceupdate_infoSessionBase: ServerSessionUnaryBase<Foobar_UserSetting_UserInfo, Foobar_Shared_Empty>, Foobar_UserSetting_UserSettingServiceupdate_infoSession {}

internal protocol Foobar_UserSetting_UserSettingServicecreate_userSession: ServerSessionUnary {}

fileprivate final class Foobar_UserSetting_UserSettingServicecreate_userSessionBase: ServerSessionUnaryBase<Foobar_UserSetting_UserInfo, Foobar_UserSetting_UserInfo>, Foobar_UserSetting_UserSettingServicecreate_userSession {}

